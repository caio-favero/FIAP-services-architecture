version: '3'
services:
  core-els:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
    restart: on-failure
    hostname: core-els
    ports:
      - 9200:9200
    volumes:
      - core-els-data:/usr/share/elasticsearch/data
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "network.host=localhost"
    command: ["elasticsearch", "-Elogger.level=WARN"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5
  core-postgres:
    image: postgres:alpine
    restart: on-failure
    volumes:
      - core-postgre-data:/var/lib/postgresql
    command: postgres -c fsync=off
    environment:
      - POSTGRES_USER=bitcapital
      - POSTGRES_PASSWORD=bitcapital
      - POSTGRES_DB=bitcapital_core
    hostname: core-postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "bitcapital", "-d", "bitcapital_core"]
      interval: 30s
      timeout: 10s
      retries: 3
  core-timescale:
    image: timescale/timescaledb
    restart: on-failure
    environment:
      - POSTGRES_USER=timescale
      - POSTGRES_PASSWORD=timescale
      - POSTGRES_DB=timescale
    volumes:
      - core-timescale-data:/var/lib/postgresql
    hostname: core-timescale
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "timescale", "-d", "timescale"]
      interval: 30s
      timeout: 10s
      retries: 3
  core-rabbitmq:
    image: rabbitmq:management-alpine
    restart: on-failure
    volumes:
      - core-rabbitmq-data:/var/lib/rabbitmq
    hostname: core-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log [{console,[{level,warning}]}]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672/api/"]
      interval: 30s
      timeout: 10s
      retries: 5
  core-redis:
    image: redis
    restart: on-failure
    hostname: core-redis
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  unleash:
    image: unleashorg/unleash-server
    ports:
      - 4242:4242
    environment:
      DATABASE_URL: postgres://postgres:unleash@unleash-postgre/postgres
    depends_on:
      - unleash-postgre
    command: >
      sh -c "
        while ! nc -z unleash-postgre 5432; do
          echo 'Postgres is unavailable.'
          sleep 1
        done
        npm run start"
  unleash-postgre:
    image: postgres:10-alpine
volumes:
  core-els-data:
    driver: local
  core-postgre-data:
    driver: local
  core-timescale-data:
    driver: local
  core-rabbitmq-data:
    driver: local